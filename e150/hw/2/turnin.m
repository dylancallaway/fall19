close all
clear
clc

dbstop if error
format compact

% From Table 1
dt = .2; % s. time step size
t_f = 60; % s. maximum task time
time_steps = 0:dt:t_f; % time step iterator
num_steps = length(time_steps); % time_step index iterator

% From Table 3
children = 6; % number of designs generated by breeding
parents = 6; % number of designs kept from last generation
S = 20; % designs per generation
G = 100; % max number of generations
dv = 15;

% initial positions of agents
% each col is the position of the ith agent
N_m = 15; % number of initial agents
r_i(1, :) = [-110, -110, -110, -110, -110, -120, -120, -120, -120, -120, -130, -130, -130, -130, -130];
r_i(2, :) = linspace(-10, 10, N_m);
r_i(3, :) = linspace(-10, 10, N_m);

% initial positions of obstacles
% each col is the position of the jth obstacle
N_o = 25;
O_j(1:2, :) = -100 + 200 .* rand(2, N_o);
O_j(3, :) = -10 + 20 .* rand(1, N_o);
% O_j(1, :) = linspace(-100, 100, N_o);
% O_j(2, :) = linspace(-100, 100, N_o);
% O_j(3, :) = linspace(-10, 10, N_o);

% initial positions of targets
% each col is the position of the jth target
N_t = 100;
T_j(1:2, :) = -100 + 200 .* rand(2, N_t);
T_j(3, :) = -10 + 20 .* rand(1, N_t);
% T_j(1, :) = linspace(-100, 100, N_t);
% T_j(2, :) = linspace(-100, 100, N_t);
% T_j(3, :) = linspace(-10, 10, N_t);


%% Testing

% Create function with all initial conditions passed
uav_func = @(W_mt, W_mo, W_mm, w_t1, w_t2, w_o1, w_o2, w_m1, w_m2, a_1, a_2, b_1, b_2, c_1, c_2) myUAV(0, N_m, N_t, N_o, r_i, O_j, T_j, W_mt, W_mo, W_mm, w_t1, w_t2, w_o1, w_o2, w_m1, w_m2, a_1, a_2, b_1, b_2, c_1, c_2);

% [cost] = uav_func(W_mt, W_mo, W_mm, w_t1, w_t2, w_o1, w_o2, w_m1, w_m2, a_1, a_2, b_1, b_2, c_1, c_2)
[PI, Orig, Lambda, bd] = myGenetic(uav_func, [0, 2], parents, G, S, dv);
best_cost = PI(G, 1)

%% Plot and cost check
uav_func = @(W_mt, W_mo, W_mm, w_t1, w_t2, w_o1, w_o2, w_m1, w_m2, a_1, a_2, b_1, b_2, c_1, c_2) myUAV(1, N_m, N_t, N_o, r_i, O_j, T_j, W_mt, W_mo, W_mm, w_t1, w_t2, w_o1, w_o2, w_m1, w_m2, a_1, a_2, b_1, b_2, c_1, c_2);
[cost] = uav_func(bd(1), bd(2), bd(3), bd(4), bd(5), bd(6), bd(7), bd(8), bd(9), bd(10), bd(11), bd(12), bd(13), bd(14), bd(15))
